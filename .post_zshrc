export EDITOR=vim
fpath=(/usr/local/share/zsh-completions $fpath)
export GOPATH=$HOME/workspace/go
# echo 'use hxsf config'
# other config
export GOPATH=$HOME/workspace/go
function gi() { curl -L -s https://www.gitignore.io/api/$@ ;}
function tping() {ping $1 | xargs -I '{}' date "+%Y-%m-%d %H:%M:%S [$1] {}"}
function tping() {ping $1 | xargs -I '{}' date "+%H:%M:%S [$1] {}"}

export HOMEBREW_AUTO_UPDATE_SECS=36000
export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.cloud.tencent.com/homebrew-bottles"
export HOMEBREW_BREW_GIT_REMOTE="https://git.hxsf.work/homebrew/brew.git"
export HOMEBREW_CORE_GIT_REMOTE="https://git.hxsf.work/homebrew/homebrew-core.git"
export HOMEBREW_PIP_INDEX_URL="https://mirrors.cloud.tencent.com/pypi/simple"
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/bottles
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles/bottles
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles/bottles
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.cloud.tencent.com/homebrew-bottles

PATH="$HOME/.bin/bin:/usr/local/sbin:$GOPATH/bin:$HOME/flutter/bin:$PATH"

PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH:$HOME/.bin/bin"
MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

PS1='%{$fg[green]%}TC%{$reset_color%} '$PS1


DOT_HOME=$(dirname $0)
# add tmuxinator Completion
. $DOT_HOME/.tmuxinator.zsh;

function add_routes {
    ROUTE_SCRIPT=$DOT_HOME/routes.sh
    if [ -f $ROUTE_SCRIPT ]; then
        sudo bash $ROUTE_SCRIPT
    else
        echo "$ROUTE_SCRIPT not found"
    fi
}

function rm_routes {
    ROUTE_SCRIPT=$DOT_HOME/routes.sh
    if [ -f $ROUTE_SCRIPT ]; then
        sudo bash $ROUTE_SCRIPT -D
    else
        echo "$ROUTE_SCRIPT not found"
    fi
}


function add_routes_online {
    ROUTE_SCRIPT=$DOT_HOME/online_routes.sh
    if [ -f $ROUTE_SCRIPT ]; then
        sudo bash $ROUTE_SCRIPT
    else
        echo "$ROUTE_SCRIPT not found"
    fi
}

function rm_routes_online {
    ROUTE_SCRIPT=$DOT_HOME/online_routes.sh
    if [ -f $ROUTE_SCRIPT ]; then
        sudo bash $ROUTE_SCRIPT -D
    else
        echo "$ROUTE_SCRIPT not found"
    fi
}


OATH_KEY_HOME=${DOT_HOME}/otp/

function _totp { 
  if [ -f $OATH_KEY_HOME/$1 ]
    then
      CODE=$(oathtool --totp -b -d 6 `cat $OATH_KEY_HOME/$1`)
      if [ `uname` = 'Darwin' ]
        then 
          echo -n $CODE | pbcopy # Comment out if you don't want the
                                 # OTP to be automatically copied to
                                 # the clipboard on Mac OS X
      fi
      echo "$CODE"
  else
    echo "No key specified, or key not found."
    echo "Available keys:"
    ls $OATH_KEY_HOME
  fi
}
fpath+=~/.zfunc
autoload -U compinit && compinit

alias qrdecode=zbarimg

h=()
if [[ -r ~/.ssh/config ]]; then
  h=($h ${${${(@M)${(f)"$(cat ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
fi
#if [[ -r ~/.ssh/known_hosts ]]; then
#  h=($h ${${${(f)"$(cat ~/.ssh/known_hosts{,2} || true)"}%%\ *}%%,*}) 2>/dev/null
#fi
if [[ $#h -gt 0 ]]; then
  zstyle ':completion:*:ssh:*' hosts $h
  zstyle ':completion:*:slogin:*' hosts $h
fi

eval $(thefuck --alias)


MIRROR_HOST=${MIRROR_HOST:-harbor.hxsf.work}

function mirror_gcr() {
    echo "mirror $1 to $MIRROR_HOST/$1" \
    && docker pull "$1" \
    && docker tag "$1" "$MIRROR_HOST/$1" \
    && docker push "$MIRROR_HOST/$1" \
    && docker rmi "$MIRROR_HOST/$1" \
    && docker rmi "$1" \
    && echo "Done!"
}

alias nocolor="sed 's/\x1b\[[0-9;]*m//g'"
